name: pull-request
on:
  pull_request:
    paths-ignore:
      - '.github/**'

jobs:
  pr-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }} # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Git Version
        id: auto_version
        uses: codacy/git-version@2.8.0
        with:
          prefix: v
          minor-identifier: /feat(ure)*:/
          major-identifier: /breaking:/

      - name: Set package version
        id: version
        run: |
          if [[ $INPUT_VERSION ]]; then
            echo "version=$INPUT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version=${{ steps.auto_version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

      # DOCKER BUILD & PUSH
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: quay.io

      - name: quay-workaround
        run: echo "LABEL quay.expires-after=14d" >> Dockerfile
        
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: name/app
          labels: |
            maintainer=CrazyMax
            org.opencontainers.image.title=MyCustomTitle
            org.opencontainers.image.description=Another description
            org.opencontainers.image.vendor=MyCompany
            quay.expires-after=14d

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          pull: true
          tags: '${{ secrets.DOCKER_REGISTRY_NAME }}/csi-wekafs:${{ steps.auto_version.outputs.version }}'
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          build-args: |
            VERSION='${{ steps.auto_version.outputs.version }}'
